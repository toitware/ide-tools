{
	"name": "toit",
	"displayName": "Toit",
	"description": "Toit Programming Language Support",
	"publisher": "toit",
	"version": "1.6.0",
	"license": "MIT",
	"type": "commonjs",
	"engines": {
		"vscode": "^1.55.0"
	},
	"categories": [
		"Programming Languages"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/toitware/ide-tools.git"
	},
	"activationEvents": [
		"onLanguage:toit",
		"workspaceContains:**/*.toit",
		"onView:toitView",
		"onCommand:toit.ensureAuth",
		"onCommand:toit.refreshView"
	],
	"icon": "images/toitware_logo.png",
	"main": "./dist/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "toitView",
					"title": "Toit",
					"icon": "./resources/logo.svg",
					"when": "toit.extensionActive"
				}
			]
		},
		"views": {
			"toitView": [
				{
					"id": "toitDeviceView",
					"name": "Devices",
					"when": "toit.extensionActive"
				},
				{
					"id": "toitSerialView",
					"name": "Serial Ports",
					"when": "toit.extensionActive",
					"visibility": "collapsed"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "toitDeviceView",
				"contents": "No devices found.\n\nTry to log in\n[Log in](command:toit.ensureAuth)",
				"when": "toit.extensionActive"
			}
		],
		"commands": [
			{
				"command": "toit.uninstallApp",
				"title": "Uninstall",
				"category": "Toit",
				"icon": "$(trash)",
				"enablement": "toit.extensionActive"
			},
			{
				"command": "toit.refreshDeviceView",
				"title": "Refresh",
				"category": "Toit",
				"icon": "$(refresh)",
				"enablement": "toit.extensionActive"
			},
			{
				"command": "toit.refreshSerialView",
				"title": "Refresh",
				"category": "Toit",
				"icon": "$(refresh)",
				"enablement": "toit.extensionActive"
			},
			{
				"command": "toit.ensureAuth",
				"title": "Log in to toit.io",
				"category": "Toit",
				"enablement": "toit.extensionActive"
			},
			{
				"command": "toit.devRun",
				"title": "Run",
				"category": "Toit",
				"icon": "$(run)",
				"enablement": "toit.extensionActive"
			},
			{
				"command": "toit.devDeploy",
				"title": "Deploy",
				"category": "Toit",
				"icon": "$(run-all)",
				"enablement": "toit.extensionActive"
			},
			{
				"command": "toit.devLogs",
				"title": "Logs",
				"category": "Toit",
				"icon": "$(output)",
				"enablement": "toit.extensionActive"
			},
			{
				"command": "toit.serialProvision",
				"title": "Provision device",
				"category": "Toit",
				"icon": "$(add)",
				"enablement": "toit.extensionActive"
			},
			{
				"command": "toit.serialMonitor",
				"title": "Monitor serial output",
				"category": "Toit",
				"icon": "$(selection)",
				"enablement": "toit.extensionActive"
			},
			{
				"command": "jag.watch",
				"title": "Watch for changes and rerun",
				"category": "Jaguar",
				"icon": "$(eye)",
				"enablement": "jag.execPresent"
			},
			{
				"command": "jag.run",
				"title": "Run file on device",
				"category": "Jaguar",
				"icon": "$(run)",
				"enablement": "jag.execPresent"
			},
			{
				"command": "jag.monitor",
				"title": "Monitor serial output",
				"category": "Jaguar",
				"icon": "$(selection)",
				"enablement": "jag.execPresent"
			},
			{
				"command": "jag.scan",
				"title": "Scan for Jaguar devices",
				"category": "Jaguar",
				"icon": "$(call-outgoing)",
				"enablement": "jag.execPresent"
			},
			{
				"command": "jag.flash",
				"title": "Flash a device with Jaguar",
				"category": "Jaguar",
				"icon": "$(call-outgoing)",
				"enablement": "jag.execPresent"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "toit.refreshDeviceView",
					"when": "view == toitDeviceView",
					"group": "navigation@1"
				},
				{
					"command": "toit.refreshSerialView",
					"when": "view == toitSerialView",
					"group": "navigation@1"
				}
			],
			"view/item/context": [
				{
					"command": "toit.serialProvision",
					"when": "view == toitSerialView && viewItem == serial-port",
					"group": "inline@0"
				},
				{
					"command": "toit.serialMonitor",
					"when": "view == toitSerialView && viewItem == serial-port",
					"group": "inline@1"
				},
				{
					"command": "toit.uninstallApp",
					"when": "view == toitDeviceView && viewItem == application",
					"group": "inline"
				},
				{
					"command": "toit.devRun",
					"when": "view == toitDeviceView && viewItem =~ /device.*/",
					"group": "inline@2"
				},
				{
					"command": "toit.devDeploy",
					"when": "view == toitDeviceView && viewItem =~ /device.*/",
					"group": "inline@1"
				},
				{
					"command": "toit.devLogs",
					"when": "view == toitDeviceView && viewItem =~ /device.*/",
					"group": "inline@0"
				}
			],
			"commandPalette": [
				{
					"command": "toit.uninstallApp",
					"when": "false"
				}
			]
		},
		"languages": [
			{
				"id": "toit",
				"aliases": [
					"Toit",
					"toit"
				],
				"extensions": [
					".toit"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "toit",
				"scopeName": "source.toit",
				"path": "./syntaxes/toit.tmLanguage.json"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Toit",
			"properties": {
				"toit.path": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"description": "The path to the 'toit' executable, for example `/usr/bin/toit`.",
					"scope": "machine-overridable"
				},
				"toit.Path": {
					"type": [
						"string",
						"null"
					],
					"description": "The path to the 'toit' executable, for example `/usr/bin/toit`.",
					"deprecationMessage": "Deprecated: Use toit.path instead.",
					"scope": "machine-overridable"
				},
				"jag.path": {
					"type": [
						"string",
						"null"
					],
					"description": "The path to the 'jag' executable, for example `/usr/bin/jag`. If left unset, the 'jag' executable in the path is used.",
					"scope": "machine-overridable"
				},
				"toitLanguageServer.command": {
					"type": [
						"array",
						"null"
					],
					"description": "The command (array of strings) to invoke the Toit language server. If not set, uses 'toit' (configuration toit.path) as language server. If that one is not set and no 'toit' is found in the path, then 'toitlsp' and 'toitc' are found in the path.",
					"default": null,
					"scope": "machine-overridable"
				},
				"toitLanguageServer.debug.clientToServer": {
					"type": "boolean",
					"default": false,
					"description": "Write all messages from the client to the server into a `/tmp/debug_client_to_server-{date}.log` file."
				},
				"toitLanguageServer.shouldWriteReproOnCrash": {
					"type": "boolean",
					"default": false,
					"description": "Generates a repro when the compiler crashes."
				},
				"toitLanguageServer.trace.server": {
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"description": "Traces the communication between VSCode and the ToitLanguageServer service."
				}
			}
		}
	},
	"scripts": {
		"compile-prod": "webpack --mode production",
		"compile": "webpack --mode development",
		"watch": "webpack --mode development --watch",
		"test-watch": "tsc -p ./ -watch",
		"test-compile": "tsc -p ./",
		"jenkins-test": "tsc -p ./ && ts-node ./test/runTest.ts",
		"lint": "eslint src --ext ts",
		"lint-fix": "eslint src --ext ts --fix",
		"package": "vsce package --yarn",
		"vsce-publish": "vsce publish --yarn --baseImagesUrl https://github.com/toitware/ide-tools/raw/master/vscode/ -p $AZURE_TOKEN $BUILD_VERSION",
		"ovsx-publish": "ovsx publish --yarn --baseImagesUrl https://github.com/toitware/ide-tools/raw/master/vscode/ -p $OPEN_VSX_TOKEN",
		"clean": "rm -rf ./out ./dist ./node_modules"
	},
	"devDependencies": {
		"@babel/core": "^7.14.6",
		"@types/glob": "^7.1.1",
		"@types/jest": "^26.0.23",
		"@types/node": "^14.17.1",
		"@types/semver": "^7.3.5",
		"@types/vscode": "^1.55.0",
		"@typescript-eslint/eslint-plugin": "^4.24.0",
		"@typescript-eslint/parser": "^4.24.0",
		"eslint": "^7.26.0",
		"glob": "^7.1.4",
		"jest": "^27.0.6",
		"jest-junit": "^12.2.0",
		"jest-mock": "27.0.6",
		"js-yaml": "^3.14.0",
		"ts-jest": "^27.0.3",
		"ts-loader": "^6.2.2",
		"ts-node": "^10.0.0",
		"tslint": "^5.20.1",
		"typescript": "^3.9.5",
		"webpack": "^5.39.1",
		"webpack-cli": "^4.7.2"
	},
	"dependencies": {
		"ovsx": "^0.2.0",
		"semver": "^7.3.5",
		"vsce": "^1.77.0",
		"vscode-languageclient": "^5.2.1",
		"vscode-test": "^1.5.2"
	}
}
