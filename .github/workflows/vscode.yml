name: CI

on:
  push:
  release:
    types: [published]

jobs:
  vscode:
    runs-on: ubuntu-latest
    env:
      vscode-dir: ./vscode

    steps:
      - uses: actions/checkout@v4

      - name: Set up constants
        shell: bash
        id: constants
        run: |
          NIGHTLY=$(tools/nightlyversion)
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION=${{ github.event.release.tag_name }}
          else
            VERSION=$NIGHTLY
          fi

          echo $NIGHTLY
          echo $VERSION

          echo "nightly_version=$NIGHTLY" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install dependencies
        working-directory: ${{ env.vscode-dir }}
        run: |
          yarn install

      - name: Lint
        working-directory: ${{ env.vscode-dir }}
        run: |
          yarn run lint

      - name: Configure Git identity
        run: |
          git config --global user.email "leon@toit.io"
          git config --global user.name "Leon Gungadin Mogensen"

      - name: Compile
        working-directory: ${{ env.vscode-dir }}
        run: |
          yarn run compile-prod

      - name: Build package
        working-directory: ${{ env.vscode-dir }}
        run: |
          VERSION=${{ steps.constants.outputs.version }}
          VERSION_WITHOUT_V=$(echo $VERSION | sed 's/^v//')
          yarn version --no-git-tag-version --new-version $VERSION_WITHOUT_V --allow-same-version
          yarn run package
          if [[ "${{ github.event_name }}" == "release" && "$VERSION_WITHOUT_V" != "$VERSION" ]]; then
            cp toit-*.vsix toit-${{ steps.constants.outputs.version }}.vsix
          fi

      - name: Upload vsix artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix
          path: ${{ env.vscode-dir }}/toit-${{ steps.constants.outputs.version }}.vsix

      - name: Publish to vscode marketplace
        working-directory: ${{ env.vscode-dir }}
        if: github.event_name == 'release'
        env:
          AZURE_TOKEN: ${{ secrets.VSCODE_AZURE_LEON_ACCESS_TOKEN }}
        run:
          yarn run vsce-publish

      - name: Publish to open-vsx.org
        working-directory: ${{ env.vscode-dir }}
        if: github.event_name == 'release'
        env:
          OPEN_VSX_TOKEN: ${{ secrets.VSCODE_OPEN_VSX_TOKEN }}
        run:
          yarn run ovsx-publish
