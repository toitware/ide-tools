name: CI

on:
  push:
  release:
    types: [published]

jobs:
  vscode:
    runs-on: ubuntu-latest
    env:
      vscode-dir: ./vscode

    steps:
      - uses: actions/checkout@v2

      - name: Set up constants
        shell: bash
        id: constants
        run: |
          NIGHTLY=$(tools/nightlyversion)
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION=${{ github.event.release.tag_name }}
          else
            VERSION=$NIGHTLY
          fi

          echo $NIGHTLY
          echo $VERSION

          echo ::set-output name=nightly_version::$NIGHTLY
          echo ::set-output name=version::$VERSION

      - name: Install dependencies
        working-directory: ${{ env.vscode-dir }}
        run: |
          npm install
          sudo apt-get update
          sudo apt-get install xvfb

      - name: Lint
        working-directory: ${{ env.vscode-dir }}
        run: |
          npm run lint

      - name: Test
        working-directory: ${{ env.vscode-dir }}
        env:
          DISPLAY: ":99.0"
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          npm run ci-test

      - name: Compile
        working-directory: ${{ env.vscode-dir }}
        run: |
          npm run compile-prod

      - name: Build package
        working-directory: ${{ env.vscode-dir }}
        run: |
          npm version ${{ steps.constants.outputs.version }} --allow-same-version
          npm run package

      - name: Upload vsix artifact
        uses: actions/upload-artifact@v2
        with:
          name: vsix
          path: ${{ env.vscode-dir }}/toit-${{ steps.constants.outputs.version }}.vsix

      - name: Publish to vscode marketplace
        working-directory: ${{ env.vscode-dir }}
        if: github.event_name == 'release'
        env:
          AZURE_TOKEN: ${{ secrets.VSCODE_AZURE_LEON_ACCESS_TOKEN }}
        run:
          npm run vsce-publish

      - name: Publish to open-vsx.org
        working-directory: ${{ env.vscode-dir }}
        if: github.event_name == 'release'
        env:
          OPEN_VSX_TOKEN: ${{ secrets.VSCODE_OPEN_VSX_TOKEN }}
        run:
          npm run ovsx-publish
